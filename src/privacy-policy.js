let utils = require('./utils')
let entityMap = require('../data/generated/entity-map')

class PrivacyPolicy {
    addLists (lists) {
        this.tosdrList = lists.tosdr
        this.polisisList = lists.polisis

        this.addDuplicateRulesForParents(this.tosdrList)
        this.addDuplicateRulesForParents(this.polisisList)
    }

    getScoreForUrl (url) {
        let hostname = utils.extractHostFromURL(url)
        let parent = utils.findParent(url.split('.'))

        // prefer tosdr data because that's generated by humans
        let privacyData = this.tosdrList[url] ||
            this.tosdrList[hostname] ||
            this.tosdrList[parent]

        if (!privacyData) {
            privacyData = this.polisisList[url] ||
                this.polisisList[hostname] ||
                this.polisisList[parent]
        }

        if (privacyData) {
            return privacyData.score
        }
    }

    getReasonsForUrl (url) {
        let hostname = utils.extractHostFromURL(url)
        let parent = utils.findParent(url.split('.'))

        let tosdrData = this.tosdrList[url] ||
            this.tosdrList[hostname] ||
            this.tosdrList[parent]

        let polisisData = this.polisisList[url] ||
            this.polisisList[hostname] ||
            this.polisisList[parent]

        return {
            tosdr: tosdrData || {},
            polisis: polisisData || {}
        }
    }

    addDuplicateRulesForParents (list) {
        Object.keys(list).forEach((url) => {
            let parentEntity = utils.findParent(url.split('.'))

            if (parentEntity && !list[parentEntity]) {
                list[parentEntity] = list[url]
            }
        })
    }
}

module.exports = new PrivacyPolicy()
